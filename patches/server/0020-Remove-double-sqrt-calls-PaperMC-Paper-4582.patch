From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mariell Hoversholm <proximyst@proximyst.com>
Date: Mon, 28 Sep 2020 22:46:44 +0200
Subject: [PATCH] Remove double sqrt calls (PaperMC/Paper#4582)

---
 .../java/net/minecraft/server/PlayerChunkMap.java    | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/main/java/net/minecraft/server/PlayerChunkMap.java b/src/main/java/net/minecraft/server/PlayerChunkMap.java
index 4628258f4a568aca8bd24be4649b929d12f9fbe9..3e22efbe9baf44a9b355ebce8d3c7832d7a14c6a 100644
--- a/src/main/java/net/minecraft/server/PlayerChunkMap.java
+++ b/src/main/java/net/minecraft/server/PlayerChunkMap.java
@@ -514,13 +514,13 @@ public class PlayerChunkMap extends IChunkLoader implements PlayerChunk.d {
 
             double dist = MCUtil.distance(playerChunkX, 0, playerChunkZ, coord.x, 0, coord.z);
             // Prioritize immediate
-            if (dist <= 4 * 4) {
-                updateChunkPriorityMap(priorities, coord.pair(), (int) (27 - Math.sqrt(dist)));
+            if (dist <= 4) { // Papercut - don't square this, it will rarely become that high
+                updateChunkPriorityMap(priorities, coord.pair(), (int) (27 - dist)); // Papercut - remove sqrt
                 return;
             }
 
             // Prioritize nearby chunks
-            updateChunkPriorityMap(priorities, coord.pair(), (int) (20 - Math.sqrt(dist) * twoThirdModifier));
+            updateChunkPriorityMap(priorities, coord.pair(), (int) (20 - dist * twoThirdModifier)); // Papercut - remove sqrt
         });
 
         // Prioritize Frustum near 3
@@ -530,7 +530,7 @@ public class PlayerChunkMap extends IChunkLoader implements PlayerChunk.d {
             if (shouldSkipPrioritization(coord)) return;
 
             double dist = MCUtil.distance(playerChunkX, 0, playerChunkZ, coord.x, 0, coord.z);
-            updateChunkPriorityMap(priorities, coord.pair(), (int) (25 - Math.sqrt(dist) * twoThirdModifier));
+            updateChunkPriorityMap(priorities, coord.pair(), (int) (25 - dist * twoThirdModifier)); // Papercut - remove sqrt
         });
 
         // Prioritize Frustum near 5
@@ -541,7 +541,7 @@ public class PlayerChunkMap extends IChunkLoader implements PlayerChunk.d {
                 if (shouldSkipPrioritization(coord)) return;
 
                 double dist = MCUtil.distance(playerChunkX, 0, playerChunkZ, coord.x, 0, coord.z);
-                updateChunkPriorityMap(priorities, coord.pair(), (int) (25 - Math.sqrt(dist) * twoThirdModifier));
+                updateChunkPriorityMap(priorities, coord.pair(), (int) (25 - dist * twoThirdModifier)); // Papercut - remove sqrt
             });
         }
 
@@ -554,7 +554,7 @@ public class PlayerChunkMap extends IChunkLoader implements PlayerChunk.d {
                     return;
                 }
                 double dist = MCUtil.distance(playerChunkX, 0, playerChunkZ, coord.x, 0, coord.z);
-                updateChunkPriorityMap(priorities, coord.pair(), (int) (25 - Math.sqrt(dist) * twoThirdModifier));
+                updateChunkPriorityMap(priorities, coord.pair(), (int) (25 - dist * twoThirdModifier)); // Papercut - remove sqrt
             });
         }
 
