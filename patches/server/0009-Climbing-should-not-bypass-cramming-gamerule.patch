From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: William Blake Galbreath <blake.galbreath@gmail.com>
Date: Sun, 21 Jun 2020 14:08:42 +0200
Subject: [PATCH] Climbing should not bypass cramming gamerule

Original patch: https://raw.githubusercontent.com/pl3xgaming/Purpur/master/patches/server/0053-Climbing-should-not-bypass-cramming-gamerule.patch
---
 src/main/java/net/minecraft/server/Entity.java         | 10 +++++++++-
 .../java/net/minecraft/server/EntityArmorStand.java    |  2 +-
 src/main/java/net/minecraft/server/EntityBat.java      |  2 +-
 src/main/java/net/minecraft/server/EntityBoat.java     |  2 +-
 .../java/net/minecraft/server/EntityHorseAbstract.java |  2 +-
 src/main/java/net/minecraft/server/EntityLiving.java   |  8 +++++---
 .../net/minecraft/server/EntityMinecartAbstract.java   |  2 +-
 src/main/java/net/minecraft/server/EntityParrot.java   |  4 ++--
 .../java/net/minecraft/server/IEntitySelector.java     |  8 +++++++-
 src/main/java/us/minevict/papercut/PapercutConfig.java |  5 +++++
 10 files changed, 33 insertions(+), 12 deletions(-)

diff --git a/src/main/java/net/minecraft/server/Entity.java b/src/main/java/net/minecraft/server/Entity.java
index 6c0d8fdaf2fd08bd53ef2cc2485132d54f3d841a..e4f7b3101946f750d78e12cbd984411b5248058b 100644
--- a/src/main/java/net/minecraft/server/Entity.java
+++ b/src/main/java/net/minecraft/server/Entity.java
@@ -1684,7 +1684,10 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
         return false;
     }
 
-    public boolean isCollidable() {
+    // Papercut start
+    @Deprecated public boolean isCollidable() { return isCollidable(false); }
+    public boolean isCollidable(boolean ignoreClimbing) {
+        // Papercut end
         return false;
     }
 
@@ -1692,6 +1695,11 @@ public abstract class Entity implements INamableTileEntity, ICommandListener, Ke
     public boolean canCollideWith(Entity entity) {
         return isCollidable();
     }
+    // Papercut start
+    public boolean canCollideWith(Entity entity, boolean ignoreClimbing) {
+        return isCollidable(ignoreClimbing);
+    }
+    // Papercut end
     // CraftBukkit end
 
     public final void runKillTrigger(Entity entity, int kills, DamageSource damageSource) { this.a(entity, kills, damageSource); } // Paper - OBFHELPER
diff --git a/src/main/java/net/minecraft/server/EntityArmorStand.java b/src/main/java/net/minecraft/server/EntityArmorStand.java
index 70c2c2e3e42f9c9d03ccb07d20db246436d0e676..881fa7958586a9851cf4acec9e050178a5a602a9 100644
--- a/src/main/java/net/minecraft/server/EntityArmorStand.java
+++ b/src/main/java/net/minecraft/server/EntityArmorStand.java
@@ -320,7 +320,7 @@ public class EntityArmorStand extends EntityLiving {
     }
 
     @Override
-    public boolean isCollidable() {
+    public boolean isCollidable(boolean ignoreClimbing) { // Papercut
         return false;
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityBat.java b/src/main/java/net/minecraft/server/EntityBat.java
index a726dd6768c672ab19bae3717cdf40b2c2358e70..b42ed737bb7025c9e36e7cd63be64df9cdef546a 100644
--- a/src/main/java/net/minecraft/server/EntityBat.java
+++ b/src/main/java/net/minecraft/server/EntityBat.java
@@ -50,7 +50,7 @@ public class EntityBat extends EntityAmbient {
     }
 
     @Override
-    public boolean isCollidable() {
+    public boolean isCollidable(boolean ignoreClimbing) { // Papercut
         return false;
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityBoat.java b/src/main/java/net/minecraft/server/EntityBoat.java
index 7df2837d6a058d375e8d45b7c00fac343abaf7fa..241c0386f3baeeabc6dbb97ad1b9e62ee17a2d8c 100644
--- a/src/main/java/net/minecraft/server/EntityBoat.java
+++ b/src/main/java/net/minecraft/server/EntityBoat.java
@@ -106,7 +106,7 @@ public class EntityBoat extends Entity {
     }
 
     @Override
-    public boolean isCollidable() {
+    public boolean isCollidable(boolean ignoreClimbing) { // Papercut
         return true;
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java
index 8921c2333cd5efcb87dd52b95fe12fd5340df55f..67ea2ceda5928da06c4f1a7d87f4ceededd7da36 100644
--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java
@@ -165,7 +165,7 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven
     }
 
     @Override
-    public boolean isCollidable() {
+    public boolean isCollidable(boolean ignoreClimbing) { // Papercut
         return !this.isVehicle();
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index ee41f8d0bcaa43da684accc1f7e3ee9055e399cb..94344d72531cb32b2baee7d4f943fd9077f3d8d2 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -2837,7 +2837,7 @@ public abstract class EntityLiving extends Entity {
         // Paper - end don't run getEntities if we're not going to use its result
         // Tuinity start - reduce memory allocation from collideNearby
         List<Entity> list = com.tuinity.tuinity.util.CachedLists.getTempGetEntitiesList();
-        this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.a(this), list);
+        this.world.getEntities(this, this.getBoundingBox(), IEntitySelector.pushable(this, world.papercutConfig.fixClimbingBypassingCrammingRule), list);
         try {
         // Tuinity end - reduce memory allocation from collideNearby
 
@@ -2981,8 +2981,10 @@ public abstract class EntityLiving extends Entity {
     }
 
     @Override
-    public boolean isCollidable() {
-        return this.isAlive() && !this.isSpectator() && !this.isClimbing() && this.collides; // CraftBukkit
+    // Papercut start
+    public boolean isCollidable(boolean ignoreClimbing) {
+        return this.isAlive() && !this.isSpectator() && (ignoreClimbing || !this.isClimbing()) && this.collides; // CraftBukkit
+        // Papercut end
     }
 
     // CraftBukkit start - collidable API
diff --git a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
index 13fcb666ec20f844846eb48265ec9f77484b397a..d3bcc45c7f8232994f555d4f62009e8a89f10984 100644
--- a/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityMinecartAbstract.java
@@ -107,7 +107,7 @@ public abstract class EntityMinecartAbstract extends Entity {
     }
 
     @Override
-    public boolean isCollidable() {
+    public boolean isCollidable(boolean ignoreClimbing) { // Papercut
         return true;
     }
 
diff --git a/src/main/java/net/minecraft/server/EntityParrot.java b/src/main/java/net/minecraft/server/EntityParrot.java
index 34e08dda2e16cd4a6ecd8d8c6dc89f090ec2bc56..2569c17239887c5ff91302a0d4c38f0311d8040d 100644
--- a/src/main/java/net/minecraft/server/EntityParrot.java
+++ b/src/main/java/net/minecraft/server/EntityParrot.java
@@ -314,8 +314,8 @@ public class EntityParrot extends EntityPerchable implements EntityBird {
     }
 
     @Override
-    public boolean isCollidable() {
-        return super.isCollidable(); // CraftBukkit - collidable API
+    public boolean isCollidable(boolean ignoreClimbing) { // Papercut
+        return super.isCollidable(ignoreClimbing); // CraftBukkit - collidable API // Papercut
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/server/IEntitySelector.java b/src/main/java/net/minecraft/server/IEntitySelector.java
index 06ce390b6492f23343e57e648bff241d96fdb7b6..a8eb35cb7d5e6cb0157001cf739df18b59280b32 100644
--- a/src/main/java/net/minecraft/server/IEntitySelector.java
+++ b/src/main/java/net/minecraft/server/IEntitySelector.java
@@ -43,11 +43,17 @@ public final class IEntitySelector {
     }
 
     public static Predicate<Entity> a(Entity entity) {
+        // Papercut start
+        return pushable(entity, false);
+    }
+
+    public static Predicate<Entity> pushable(Entity entity, boolean ignoreClimbing) {
+        // Papercut end
         ScoreboardTeamBase scoreboardteambase = entity.getScoreboardTeam();
         ScoreboardTeamBase.EnumTeamPush scoreboardteambase_enumteampush = scoreboardteambase == null ? ScoreboardTeamBase.EnumTeamPush.ALWAYS : scoreboardteambase.getCollisionRule();
 
         return (Predicate) (scoreboardteambase_enumteampush == ScoreboardTeamBase.EnumTeamPush.NEVER ? Predicates.alwaysFalse() : IEntitySelector.g.and((entity1) -> {
-            if (!entity1.canCollideWith(entity) || !entity.canCollideWith(entity1)) { // CraftBukkit - collidable API
+            if (!entity1.canCollideWith(entity, ignoreClimbing) || !entity.canCollideWith(entity1, ignoreClimbing)) { // CraftBukkit - collidable API // Papercut - ignore climbing
                 return false;
             } else if (entity.world.isClientSide && (!(entity1 instanceof EntityHuman) || !((EntityHuman) entity1).ey())) {
                 return false;
diff --git a/src/main/java/us/minevict/papercut/PapercutConfig.java b/src/main/java/us/minevict/papercut/PapercutConfig.java
index 878d1b6c7d3382203e200bb152c290df40e6725d..28adee3258eb7d72fd53c6bdf5d86167aa840fab 100644
--- a/src/main/java/us/minevict/papercut/PapercutConfig.java
+++ b/src/main/java/us/minevict/papercut/PapercutConfig.java
@@ -210,5 +210,10 @@ public final class PapercutConfig {
       }
       return this.config.getDouble(path, this.worldDefaults.getDouble(path));
     }
+
+    public boolean fixClimbingBypassingCrammingRule = true;
+    private void fixClimbingBypassingCrammingRule() {
+      fixClimbingBypassingCrammingRule = getBoolean("fix-climbing-bypassing-cramming-rule", fixClimbingBypassingCrammingRule);
+    }
   }
 }
